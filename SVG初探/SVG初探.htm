<!DOCTYPE html>
<html lang="zh">
<head>
	<meta charset="UTF-8">
	<title>SVG初探</title>
	<meta name="description" content="">
	<meta name="author" content="clareli">
	<meta name="apple-mobile-web-app-capable" content="yes" />
	<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
	<link rel="stylesheet" href="css/reveal.css">
	<link rel="stylesheet" href="css/theme/serif.css" id="theme">
	<!-- <link rel="stylesheet" media="print" href="css/print/pdf.css"> -->
	<!-- For syntax highlighting -->
	<link rel="stylesheet" href="lib/css/zenburn.css">
	<!--[if lt IE 9]>
	<script src="lib/js/html5shiv.js"></script>
	<![endif]-->
	<style type="text/css">
	.reveal {font-family: "Verdana","microsoft yahei",sans-serif;}
	.reveal .title{ line-height:1.5em; text-align: center;}
	.reveal h1{ font-size:1.6em; margin-bottom:30px; font-family: "Verdana","microsoft yahei",sans-serif; letter-spacing:0;}
	.reveal h2{ font-size:1em; margin:1em auto 0.5em; font-family: "Verdana","microsoft yahei",sans-serif;}
	.reveal p{ clear:both;}
	.reveal pre{width:100%; background-color: #f8f8f8; border: 1px solid #ddd; font-size: 18px; line-height: 26px; overflow: auto; padding: 6px 10px; border-radius: 3px; font-family: Helvetica, arial,sans-serif; font-family: Consolas,"Liberation Mono",Courier,monospace; }
	.reveal pre .notes{color: #998;font-style: italic;}

	.reveal .text{ font-size:0.7em; line-height:1.6em;}
	.reveal .source{ font-size:0.6em; line-height:1.6em;}
	.reveal .link{ float: right; margin:5px auto 20px;}
	.reveal .link a{font-size:0.7em;font-style:italic;}
	.reveal .tip{ font-size:0.7em; line-height:1.6em;}
	.reveal .tip a{line-height:1.6em;}
	.reveal .tip::before{ content:"注："}
	.reveal .content_list{ font-size:0.8em;}
	.reveal .author{ float: right; margin-top:30px; font-size:0.8em;}
	.reveal .content_list li a{line-height:2;}
	.reveal code{ background: none repeat scroll 0 0 #ddd;
    border: 1px solid #ccc; border-radius:4px;
    font-family: Menlo,Monaco,"Andale Mono","lucida console","Courier New",monospace;
    margin: 0 3px;
    padding: 1px 3px;}

	
	</style>
</head>
<body>
	<div class="reveal">
		<div class="slides">
        
			<section>
				<h1 class="title">SVG初探</h1>
				<p class="author">李津</p>
			</section>

			<section>
				<h1>什么是SVG</h1>
				<img src="img/SVG.png" alt="">
                <p class="text">SVG全称为“可缩放矢量图形”（英语：Scalable Vector Graphics，SVG）是基于可扩展标记语言（XML），用于描述二维矢量图形的一种图形格式。SVG由W3C制定，是一个开放标准。</p>
                <p class="source"><a href="http://zh.wikipedia.org/wiki/%E5%8F%AF%E7%B8%AE%E6%94%BE%E5%90%91%E9%87%8F%E5%9C%96%E5%BD%A2">SVG——维基百科</a></p>
			</section>

			<section>
				<h1>SVG的特点及优势</h1>
                <ul class="content_list">
                	<li>是W3C的一个标准</li>
                	<li>用来定义用于网络的基于矢量的图形</li>
                	<li>使用XML格式定义图形，便于编辑修改</li>
                	<li>图像在放大或缩小（改变尺寸）的情况下，其图形质量不会受损失</li>
                	<li>图像中的文本是可选的，同时也是可搜索的</li>
                </ul>
			</section>

			<section>
				<h1>浏览器对SVG的支持情况</h1>
				<p class="text"><a href="http://caniuse.com/#search=svg">查询</a></p>
			</section>
            
            <section>
            	<section class="present">
				<h1>在页面中嵌入SVG的多种方式</h1>
                <ul class="content_list">
                    <li class="fragment visible">使用<code>&lt;iframe&gt;</code>标签来嵌入SVG图像</li>
                    <li class="fragment visible">使用<code>&lt;img&gt;</code>标签来嵌入SVG图像</li>
                    <li class="fragment visible">将SVG图像作为背景图像嵌入</li>
                    <li class="fragment visible">直接使用<code>&lt;svg&gt;</code>标签</li>
                    <li class="fragment visible">使用<code>&lt;embed&gt;</code>标签来嵌入SVG图像</li>
                    <li class="fragment visible">使用<code>&lt;object&gt;</code>标签来嵌入SVG图像(兼容8以下版本ie的方法)</li>
                    <p class="text fragment visible"><a target="blank" href="demo/svg_insert.htm">demo</a></p>
                </ul>
                </section>    
			</section>

			<section>
				<h1>SVG的几种应用</h1>
				<ul class="content_list">
                	<li class="fragment visible">用SVG来制作icon</li>
                	<li class="fragment visible">SVG剪切蒙版</li>
                	<li class="fragment visible">强大的SVG动画</li>
                </ul>
			</section>

			<section>
				<section>
					<h1>使用SVG来制作icon</h1>
					<ul class="content_list">
						<li>实现不同分辨率的自动适配</li>
						<li>SVG sprite</li>
					</ul>
				</section>

				<section>
					<h2>利用设备像素比<strong>devicePixelRatio</strong>实现适配</h2>
					<p class="text">设备像素：设备像素也被称为物理像素,它是显示设备中一个最微小的物理部件。<br>
	               	独立像素：CSS像素被称为独立像素(device-independent像素)，简称为 “DIPs”。</p>
	                <p class="text">非视网膜屏幕的iphone上，屏幕物理像素320像素，独立像素也是320像素，因此，window.devicePixelRatio等于1。<br>
	                	而对于视网膜屏幕的iphone，如iphone4s, 屏幕物理像素640像素，独立像素还是320像素，因此，window.devicePixelRatio等于2。</p>
	                <small><a target="blank" href="http://bjango.com/articles/min-device-pixel-ratio/">devicePixelRatio查询</a></small>  
	                <small><a target="blank" href="demo/svg_png.htm">PNG SVG放大对比</a></small>
				</section>

				<section>
					<h2>SVG sprite</h2>
					<p class="text">外链式：使用css背景图的方式在引入SVG图片，类似传统的png sprite</p>
					<p class="text">内联式：在页面中内嵌SVG代码</p>
					<p class="source"><a target="blank" href="demo/svg_sprite.htm">demo</a></p>
				</section>

				<section>
					<h2>两种不同方式的利弊</h2>
					<ul class="content_list">
						<li>外链式与传统sprite使用方式相同，可以不同页面共用，但不灵活，无法修改icon颜色。</li>
						<li>内联式可以减少页面请求，使用方便，可以用fill属性直接定义icon颜色，但不支持渐变，这种方式也会增加页面代码，无法多页面共用。</li>
					</ul>
				</section>
			</section>

			<section>
				<h1>SVG中的剪切蒙版</h1>
				<p class="text">clip-path属性是CSS Masking模块的一部分。自从2000年以来，剪切都只是SVG中的一部分，现在将这个功能引入到CSS的Msking模块中，所以现在可以对HTML元素和SVG元素进行剪切。</p>
				<p class="source"><a target="blank" href="http://codepen.io/airen/pen/Buais">不规则形状剪切</a>&nbsp;&nbsp;<a target="blank" href="http://codepen.io/airen/pen/vyEzH">文本路径剪切</a>&nbsp;&nbsp;<a target="blank" href="http://codepen.io/airen/pen/dfIry">组合形状剪切</a>&nbsp;&nbsp;<a target="blank" href="http://codepen.io/airen/pen/GAgqw">动画效果蒙版(firefox支持较好)</a></p>
				<p class="text">目前，对于clip-path的支持浏览器间还存在较大差异，也木有一款浏览器完美支持所有的属性，所以在实际项目中的应用时机尚不成熟</p>
				<!-- <p class="source"><a href="http://www.w3cplus.com/css3/css-svg-clipping.html">CSS和SVG中的剪切</a></p> -->
			</section>

			<section>
				<section>
					<h1>酷炫的SVG动画</h1>
					<ul class="content_list">
						<li>SVG原生动画</li>
						<li>借助第三方类库实现的动画</li>
					</ul>
				</section>
				<section>
					<h2>SVG原生动画</h2>
					<p class="text"><a target="blank" href="http://www.zhangxinxu.com/wordpress/2014/08/so-powerful-svg-smil-animation/">超级强大的SVG SMIL animation动画详解</a></p>
				</section>
				<section>
					<h2>借助第三方类库实现的动画</h2>
					<ul class="content_list">
						<li><a target="blank" href="http://snapsvg.io/demos/">snap.svg</a>
							<p class="source"><a target="blank" href="http://tympanus.net/Development/AnimatedSVGIcons/">Animated SVG Icons</a></p>
							<p class="source"><a target="blank" href="http://www.w3cplus.com/sites/default/files/blogs/2014/1402/ShapeHoverEffectSVG/index.html">Shape Hover Effect with SVG</a></p>
						</li>
						<li><a target="blank" href="http://alexk111.github.io/SVG-Morpheus/">SVG Morpheus</a>
							<p class="source"><a target="blank" href="demo/svg_transform.htm">demo</a></p></li>
						<li><a target="blank" href="http://samherbert.net/svg-loaders/">svg-loaders加载动画</a></li>
					</ul>
				</section>
			</section>
		</div>
	</div>
	<script src="lib/js/head.min.js"></script>
	<script src="js/reveal.min.js"></script>
	<script>
		Reveal.initialize({
			controls: true,
			progress: true,
			history: true,
			center: true,
			mouseWheel: true,
			keyboard: true,
			theme: Reveal.getQueryHash().theme, // available themes are in /css/theme
			transition: Reveal.getQueryHash().transition || 'default', // default/cube/page/concave/zoom/linear/none
			// Optional libraries used to extend on reveal.js
			dependencies: [
				{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
				{ src: 'plugin/markdown/showdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
				{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
				{ src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
				{ src: 'plugin/zoom-js/zoom.js', async: true, condition: function() { return !!document.body.classList; } },
				{ src: 'plugin/notes/notes.js', async: true, condition: function() { return !!document.body.classList; } }
			]
		});
	</script>
</body>
</html>